# =============================================================================
# イメージ公開・署名ワークフロー
# =============================================================================
# 目的: セキュアなコンテナイメージ公開と署名
# 実行タイミング: mainブランチプッシュ時
# SRE要件: 供給網セキュリティ（署名・改ざん防止）
name: Publish Image

# =============================================================================
# トリガー設定: mainブランチへのプッシュのみ
# =============================================================================
on:
  push:
    branches: [main]    # 本番リリース用ブランチのみ

# =============================================================================
# 権限設定: イメージ公開と署名に必要な権限
# =============================================================================
permissions:
  contents: read      # ソースコード読み取り
  packages: write     # GitHub Container Registry書き込み
  id-token: write     # OIDC認証（Cosign署名用）

# =============================================================================
# ジョブ定義: ビルド・公開・署名
# =============================================================================
jobs:
  publish:
    name: Build, Publish & Sign Image    # 画面表示名
    runs-on: ubuntu-latest                # 実行環境
    
    # 他ジョブ（deploy）への出力定義
    outputs:
      digest: ${{ steps.build.outputs.digest }}    # イメージダイジェスト
    
    steps:
      # ===============================================================
      # ソースコード取得
      # ===============================================================
      - uses: actions/checkout@v4
      
      # ===============================================================
      # Docker環境セットアップ
      # ===============================================================
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # Buildx: マルチプラットフォームビルド対応
      
      # ===============================================================
      # コンテナレジストリ認証
      # ===============================================================
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io                           # GitHub Container Registry
          username: ${{ github.actor }}               # 実行者のGitHubユーザー名
          password: ${{ secrets.GITHUB_TOKEN }}       # 自動生成トークン

      
      # ===============================================================
      # イメージビルド・プッシュ（ダイジェスト取得統合）
      # ===============================================================
      - name: Build and push image
        id: build
        run: |
          # イメージビルド（GHCR専用）
          docker build -t ghcr.io/7lycka/sre-workflow:${{ github.sha }} .

          # GHCRにプッシュ
          docker push ghcr.io/7lycka/sre-workflow:${{ github.sha }}

          # GHCRイメージのダイジェスト取得
          digest=$(docker buildx imagetools inspect ghcr.io/7lycka/sre-workflow:${{ github.sha }} | grep -E "Digest:\s+" | awk '{print $2}')
          echo "digest=$digest" >> $GITHUB_OUTPUT
          echo "GHCR Image digest: $digest"
          echo "Build completed successfully"
        # sha タグ: コミットハッシュでバージョン管理
        # 不変性: 同じタグは常に同じ内容を保証
        # ダイジェスト: プッシュ後の確実な取得方法使用
      
      # ===============================================================
      # Cosignインストール（コンテナ署名ツール）
      # ===============================================================
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3
        # Cosign: Sigstore プロジェクトのコンテナ署名ツール
        # Sigstore: CNCF配下のセキュリティプロジェクト
      
      # ===============================================================
      # コンテナイメージ署名
      # ===============================================================
      - name: Sign container image
        run: cosign sign --yes ghcr.io/7lycka/sre-workflow@${{ steps.build.outputs.digest }}
        # @digest 指定: ダイジェストによる確実な対象指定
        # --yes: 非対話モード（CI環境用）
        # OIDC認証: GitHub ActionsのOIDCトークンで署名
      
      # ===============================================================
      # 本番用SBOM生成（アテステーション用）
      # ===============================================================
      - name: Generate SBOM for attestation
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            anchore/syft ghcr.io/7lycka/sre-workflow:${{ github.sha }} -o spdx-json > sbom.spdx.json
        # 公開イメージからSBOM再生成
        # 目的: 実際に公開されたイメージの正確なSBOM
      
      # ===============================================================
      # SBOMアテステーション（証明書添付）
      # ===============================================================
      - name: Attest SBOM
        run: |
          cosign attest --yes \
            --predicate sbom.spdx.json --type spdx \
            ghcr.io/7lycka/sre-workflow@${{ steps.build.outputs.digest }}
        # attest: 証明書としてSBOMをイメージに添付
        # predicate: 証明する内容（SBOM）
        # type spdx: SPDX形式のSBOM
        # 目的: 供給網の透明性と検証可能性
