# =============================================================================
# セキュリティゲートワークフロー
# =============================================================================
# 目的: PRマージ前に脆弱性を検出・ブロックする
# 実行タイミング: PR作成・更新時
# SRE要件: 供給網セキュリティの確保
name: Security Gate

# =============================================================================
# トリガー設定: PRによる実行
# =============================================================================
on:
  pull_request:
    branches: [main]    # mainブランチ向けPRのみ対象

# =============================================================================
# 権限設定: セキュリティ原則に基づく最小権限
# =============================================================================
permissions:
  contents: read        # リポジトリコードの読み取りのみ
  # 注意: PR段階では署名不要のため id-token: write は不要
  # 署名はmainブランチでのみ実行（publish-image.yml）

# =============================================================================
# ジョブ定義: SBOM生成と脆弱性スキャン
# =============================================================================
jobs:
  sbom-scan:
    name: SBOM & Vulnerability Scan    # 画面表示名
    runs-on: ubuntu-latest              # 実行環境
    
    steps:
      # ===============================================================
      # ソースコード取得
      # ===============================================================
      - uses: actions/checkout@v4
      
      # ===============================================================
      # Docker環境セットアップ
      # ===============================================================
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        # Buildx: 高度なDockerビルド機能を有効化
      
      # ===============================================================
      # Dockerイメージビルド（ローカルのみ、レジストリpushなし）
      # ===============================================================
      - name: Build image
        run: docker build -t ghcr.io/7lycka/sre-workflow:pr-${{ github.sha }} .
        # PR用一時イメージ作成
        # sha: コミットハッシュでユニークなタグ付け
      
      # ===============================================================
      # SBOM（Software Bill of Materials）生成
      # ===============================================================
      - name: Generate SBOM
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            anchore/syft ghcr.io/7lycka/sre-workflow:pr-${{ github.sha }} -o spdx-json > sbom.spdx.json
        # Syft: Anchore社のSBOM生成ツール
        # SPDX形式: 業界標準のSBOMフォーマット
        # 目的: 使用ライブラリの透明性確保
      
      # 重要: 署名はPRでは実行しない
      # 理由: レジストリにpushしていないため、署名対象が存在しない
      
      # ===============================================================
      # ファイルシステム脆弱性スキャン
      # ===============================================================
      - name: Trivy filesystem scan
        run: |
          docker run --rm -v "$PWD:/workspace" \
            aquasec/trivy fs --severity HIGH,CRITICAL --exit-code 1 /workspace
        # Trivy: オープンソース脆弱性スキャナー
        # fs: ファイルシステムモード（ソースコード解析）
        # HIGH,CRITICAL: 深刻度フィルタ
        # exit-code 1: 脆弱性発見時にジョブ失敗
      
      # ===============================================================
      # コンテナイメージ脆弱性スキャン
      # ===============================================================
      - name: Trivy image scan
        run: |
          docker run --rm -v /var/run/docker.sock:/var/run/docker.sock \
            aquasec/trivy image --severity HIGH,CRITICAL --exit-code 1 ghcr.io/7lycka/sre-workflow:pr-${{ github.sha }}
        # image: コンテナイメージ解析モード
        # Docker socket: ローカルイメージへのアクセス
        # 目的: ランタイム依存関係の脆弱性検出
      
      # ===============================================================
      # SBOM アーティファクト保存
      # ===============================================================
      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom-pr-${{ github.sha }}    # アーティファクト名（コミット固有）
          path: sbom.spdx.json               # アップロードファイル
        # 目的: PR レビュー時のSBOM確認用