// Express.js を使用したシンプルなWebアプリケーション
// SRE面接用のデモアプリケーションとして設計
const express = require('express');
const app = express();

// ポート設定: 環境変数から取得、デフォルトは3000
// Cloud Run では PORT 環境変数が自動設定される
const port = process.env.PORT || 3000;

// JSON形式のリクエストボディを解析するミドルウェア
// API通信で必要な設定
app.use(express.json());

// =============================================================================
// ヘルスチェックエンドポイント - SREにとって最重要
// =============================================================================
app.get('/health', (req, res) => {
  // HTTP 200 OK でレスポンス
  // ロードバランサーやモニタリングツールがこのエンドポイントを監視
  res.status(200).json({
    status: 'healthy',                                      // サービス状態
    timestamp: new Date().toISOString(),                   // 現在時刻（ISO形式）
    version: process.env.npm_package_version || '1.0.0'    // アプリケーションバージョン
  });
});

// =============================================================================
// ルートエンドポイント - アプリケーションの基本情報
// =============================================================================
app.get('/', (req, res) => {
  // アプリケーションの基本情報を返す
  res.json({
    message: 'SRE Workflow Demo Application',              // アプリケーション名
    version: process.env.npm_package_version || '1.0.0'    // バージョン情報
  });
});

// =============================================================================
// ステータスAPI - 詳細な稼働状況情報
// =============================================================================
app.get('/api/status', (req, res) => {
  // サービスの詳細な稼働状況を返す
  // 監視やデバッグに使用
  res.json({
    service: 'sre-workflow-demo',    // サービス識別子
    status: 'running',               // 稼働状態
    uptime: process.uptime(),        // プロセス稼働時間（秒）
    memory: process.memoryUsage()    // メモリ使用量詳細
  });
});

// =============================================================================
// サーバー起動
// =============================================================================
app.listen(port, () => {
  // サーバー起動ログ - 運用時の確認に重要
  console.log(`Server running on port ${port}`);
});

// テスト用にアプリケーションインスタンスをエクスポート
// Jest等のテストフレームワークから利用
module.exports = app;