# =============================================================================
# Multi-stage build用のベースイメージ
# =============================================================================
# Node.js 18のAlpine Linux版を使用
# Alpine: 軽量Linuxディストリビューション（セキュリティ・パフォーマンス向上）
FROM node:18-alpine

# =============================================================================
# 作業ディレクトリ設定
# =============================================================================
# /app を作業ディレクトリに設定
# 以降のCOPY、RUNコマンドは全てこのディレクトリで実行
WORKDIR /app

# =============================================================================
# 依存関係の定義ファイルを先にコピー
# =============================================================================
# package.json と package-lock.json をコピー
# Dockerの層キャッシュを活用するため、ソースコードより先にコピー
# 依存関係が変わらない限り、この層は再利用される
COPY package*.json ./

# =============================================================================
# 本番用依存関係のインストール
# =============================================================================
# npm ci: package-lock.json に基づく高速・確実なインストール
# --only=production: 開発用依存関係を除外（イメージサイズ削減）
RUN npm ci --only=production

# =============================================================================
# アプリケーションソースコードをコピー  
# =============================================================================
# 全てのソースコードをコンテナ内にコピー
# .dockerignore で不要ファイルは除外済み
COPY . .

# =============================================================================
# ネットワーク設定
# =============================================================================
# ポート3000を公開
# Cloud Runは自動でPORT環境変数を設定するため、実際のポートは動的
EXPOSE 3000

# =============================================================================
# セキュリティ設定 - 非特権ユーザーで実行
# =============================================================================
# rootユーザーでの実行を避けるため、nodeユーザーに変更
# セキュリティベストプラクティス
USER node

# =============================================================================
# アプリケーション起動コマンド
# =============================================================================
# Node.jsでserver.jsを実行
# CMDは実行時に上書き可能（RUNは構築時実行）
CMD ["node", "server.js"]